/*
 * Trident - A Multithreaded Server Alternative
 * Copyright 2014 The TridentSDK Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.tridentsdk.base;

import org.junit.Assert;
import org.junit.Test;

public class AudioTest {

    @Test
    public void testToString() throws Exception {
        Assert.assertEquals(Audio.AMBIENT_CAVE.toString(), "ambient.cave.cave");
        Assert.assertEquals(Audio.AMBIENT_RAIN.toString(), "ambient.weather.rain");
        Assert.assertEquals(Audio.AMBIENT_THUNDER.toString(), "ambient.weather.thunder");
        Assert.assertEquals(Audio.PLAYER_FALL_BIG.toString(), "game.player.hurt.fall.big");
        Assert.assertEquals(Audio.NEUTRAL_FALL_BIG.toString(), "game.neutral.hurt.fall.big");
        Assert.assertEquals(Audio.HOSTILE_FALL_BIG.toString(), "game.hostile.hurt.fall.big");
        Assert.assertEquals(Audio.PLAYER_FALL_SMALL.toString(), "game.player.hurt.fall.small");
        Assert.assertEquals(Audio.NEUTRAL_FALL_SMALL.toString(), "game.neutral.hurt.fall.small");
        Assert.assertEquals(Audio.HOSTILE_FALL_SMALL.toString(), "game.hostile.hurt.fall.small");
        Assert.assertEquals(Audio.PLAYER_HURT.toString(), "game.player.hurt");
        Assert.assertEquals(Audio.NEUTRAL_HURT.toString(), "game.neutral.hurt");
        Assert.assertEquals(Audio.HOSTILE_HURT.toString(), "game.hostile.hurt");
        Assert.assertEquals(Audio.PLAYER_DIE.toString(), "game.player.die");
        Assert.assertEquals(Audio.NEUTRAL_DIE.toString(), "game.neutral.die");
        Assert.assertEquals(Audio.HOSTILE_DIE.toString(), "game.hostile.die");
        Assert.assertEquals(Audio.DIG_CLOTH.toString(), "dig.cloth");
        Assert.assertEquals(Audio.DIG_GLASS.toString(), "dig.glass");
        Assert.assertEquals(Audio.DIG_GRASS.toString(), "dig.grass");
        Assert.assertEquals(Audio.DIG_GRAVEL.toString(), "dig.gravel");
        Assert.assertEquals(Audio.DIG_SAND.toString(), "dig.sand");
        Assert.assertEquals(Audio.DIG_SNOW.toString(), "dig.snow");
        Assert.assertEquals(Audio.DIG_STONE.toString(), "dig.stone");
        Assert.assertEquals(Audio.POTION_SMASH.toString(), "game.potion.smash");
        Assert.assertEquals(Audio.FIRE_ACTIVE.toString(), "fire.fire");
        Assert.assertEquals(Audio.FIRE_IGNITE.toString(), "fire.ignite");
        Assert.assertEquals(Audio.FIRECHARGE_USE.toString(), "item.fireCharge.use");
        Assert.assertEquals(Audio.FIREWORKS_BLAST.toString(), "fireworks.blast");
        Assert.assertEquals(Audio.FIREWORKS_BLAST_FAR.toString(), "fireworks.blast_far");
        Assert.assertEquals(Audio.FIREWORKS_LARGE_BLAST.toString(), "fireworks.largeBlast");
        Assert.assertEquals(Audio.FIREWORKS_LARGE_BLAST_FAR.toString(), "fireworks.largeBlast_far");
        Assert.assertEquals(Audio.FIREWORKS_LAUNCH.toString(), "fireworks.launch");
        Assert.assertEquals(Audio.FIREWORKS_TWINKLE.toString(), "fireworks.twinkle");
        Assert.assertEquals(Audio.FIREWORKS_TWINKLE_FAR.toString(), "fireworks.twinkle_far");
        Assert.assertEquals(Audio.PLAYER_SWIM.toString(), "game.player.swim");
        Assert.assertEquals(Audio.NEUTRAL_SWIM.toString(), "game.neutral.swim");
        Assert.assertEquals(Audio.HOSTILE_SWIM.toString(), "game.hostile.swim");
        Assert.assertEquals(Audio.PLAYER_SWIM_SPLASH.toString(), "game.player.swim.splash");
        Assert.assertEquals(Audio.NEUTRAL_SWIM_SPLASH.toString(), "game.neutral.swim.splash");
        Assert.assertEquals(Audio.HOSTILE_SWIM_SPLASH.toString(), "game.hostile.swim.splash");
        Assert.assertEquals(Audio.LAVA.toString(), "liquid.lava");
        Assert.assertEquals(Audio.LAVAPOP.toString(), "liquid.lavapop");
        Assert.assertEquals(Audio.WATER.toString(), "liquid.water");
        Assert.assertEquals(Audio.MINECART_BASE.toString(), "minecart.base");
        Assert.assertEquals(Audio.MINECART_INSIDE.toString(), "minecart.inside");
        Assert.assertEquals(Audio.NOTE_BASS.toString(), "note.bass");
        Assert.assertEquals(Audio.NOTE_BASSATTACK.toString(), "note.bassattack");
        Assert.assertEquals(Audio.NOTE_BD.toString(), "note.bd");
        Assert.assertEquals(Audio.NOTE_HARP.toString(), "note.harp");
        Assert.assertEquals(Audio.NOTE_HAT.toString(), "note.hat");
        Assert.assertEquals(Audio.NOTE_PLING.toString(), "note.pling");
        Assert.assertEquals(Audio.NOTE_SNARE.toString(), "note.snare");
        Assert.assertEquals(Audio.PORTAL.toString(), "portal.portal");
        Assert.assertEquals(Audio.PORTAL_TRAVEL.toString(), "portal.travel");
        Assert.assertEquals(Audio.PORTAL_TRIGGER.toString(), "portal.trigger");
        Assert.assertEquals(Audio.RANDOM_ANVIL_BREAK.toString(), "random.anvil_break");
        Assert.assertEquals(Audio.RANDOM_ANVIL_LAND.toString(), "random.anvil_land");
        Assert.assertEquals(Audio.RANDOM_ANVIL_USE.toString(), "random.anvil_use");
        Assert.assertEquals(Audio.RANDOM_BOW.toString(), "random.bow");
        Assert.assertEquals(Audio.RANDOM_BOW_HIT.toString(), "random.bowhit");
        Assert.assertEquals(Audio.RANDOM_BREAK.toString(), "random.break");
        Assert.assertEquals(Audio.RANDOM_BURP.toString(), "random.burp");
        Assert.assertEquals(Audio.RANDOM_CHEST_CLOSE.toString(), "random.chestclosed");
        Assert.assertEquals(Audio.RANDOM_CHEST_OPEN.toString(), "random.chestopen");
        Assert.assertEquals(Audio.RANDOM_CLICK.toString(), "random.click");
        Assert.assertEquals(Audio.RANDOM_DOOR_OPEN.toString(), "random.door_open");
        Assert.assertEquals(Audio.RANDOM_DOOR_CLOSE.toString(), "random.door_close");
        Assert.assertEquals(Audio.RANDOM_DRINK.toString(), "random.drink");
        Assert.assertEquals(Audio.RANDOM_EAT.toString(), "random.eat");
        Assert.assertEquals(Audio.RANDOM_EXPLODE.toString(), "random.explode");
        Assert.assertEquals(Audio.RANDOM_FIZZ.toString(), "random.fizz");
        Assert.assertEquals(Audio.RANDOM_LEVEL_UP.toString(), "random.levelup");
        Assert.assertEquals(Audio.RANDOM_ORB.toString(), "random.orb");
        Assert.assertEquals(Audio.RANDOM_POP.toString(), "random.pop");
        Assert.assertEquals(Audio.RANDOM_SPLASH.toString(), "random.splash");
        Assert.assertEquals(Audio.RANDOM_SUCCESSFUL_HIT.toString(), "random.successful_hit");
        Assert.assertEquals(Audio.RANDOM_WOOD_CLICK.toString(), "random.wood_click");
        Assert.assertEquals(Audio.GUI_BUTTON_PRESS.toString(), "gui.button.press");
        Assert.assertEquals(Audio.TNT_PRIME.toString(), "game.tnt.primed");
        Assert.assertEquals(Audio.STEP_CLOTH.toString(), "step.cloth");
        Assert.assertEquals(Audio.STEP_GRASS.toString(), "step.grass");
        Assert.assertEquals(Audio.STEP_GRAVEL.toString(), "step.gravel");
        Assert.assertEquals(Audio.STEP_LADDER.toString(), "step.ladder");
        Assert.assertEquals(Audio.STEP_SAND.toString(), "step.sand");
        Assert.assertEquals(Audio.STEP_SNOW.toString(), "step.snow");
        Assert.assertEquals(Audio.STEP_STONE.toString(), "step.stone");
        Assert.assertEquals(Audio.STEP_WOOD.toString(), "step.wood");
        Assert.assertEquals(Audio.PISTON_IN.toString(), "tile.piston.in");
        Assert.assertEquals(Audio.PISTON_OUT.toString(), "tile.piston.out");
        Assert.assertEquals(Audio.BAT_DEATH.toString(), "mob.bat.death");
        Assert.assertEquals(Audio.BAT_HURT.toString(), "mob.bat.hurt");
        Assert.assertEquals(Audio.BAT_IDLE.toString(), "mob.bat.idle");
        Assert.assertEquals(Audio.BAT_LOOP.toString(), "mob.bat.loop");
        Assert.assertEquals(Audio.BAT_TAKEOFF.toString(), "mob.bat.takeoff");
        Assert.assertEquals(Audio.BLAZE_BREATHE.toString(), "mob.blaze.breathe");
        Assert.assertEquals(Audio.BLAZE_DEATH.toString(), "mob.blaze.death");
        Assert.assertEquals(Audio.BLAZE_HIT.toString(), "mob.blaze.hit");
        Assert.assertEquals(Audio.CAT_HISS.toString(), "mob.cat.hiss");
        Assert.assertEquals(Audio.CAT_HITT.toString(), "mob.cat.hitt");
        Assert.assertEquals(Audio.CAT_MEOW.toString(), "mob.cat.meow");
        Assert.assertEquals(Audio.CAT_PURR.toString(), "mob.cat.purr");
        Assert.assertEquals(Audio.CAT_PURREOW.toString(), "mob.cat.purreow");
        Assert.assertEquals(Audio.CHICKEN_HURT.toString(), "mob.chicken.HURT");
        Assert.assertEquals(Audio.CHICKEN_PLOP.toString(), "mob.chicken.PLOP");
        Assert.assertEquals(Audio.CHICKEN_SAY.toString(), "mob.chicken.SAY");
        Assert.assertEquals(Audio.CHICKEN_STEP.toString(), "mob.chicken.STEP");
        Assert.assertEquals(Audio.COW_HURT.toString(), "mob.cow.hurt");
        Assert.assertEquals(Audio.COW_SAY.toString(), "mob.cow.say");
        Assert.assertEquals(Audio.COW_STEP.toString(), "mob.cow.step");
        Assert.assertEquals(Audio.CREEPER_PRIME.toString(), "creeper.primed");
        Assert.assertEquals(Audio.CREEPER_DEATH.toString(), "mob.creeper.death");
        Assert.assertEquals(Audio.CREEPER_SAY.toString(), "mob.creeper.say");
        Assert.assertEquals(Audio.ENDERDRAGON_END.toString(), "mob.enderdragon.end");
        Assert.assertEquals(Audio.ENDERDRAGON_GROWL.toString(), "mob.enderdragon.growl");
        Assert.assertEquals(Audio.ENDERDRAGON_HIT.toString(), "mob.enderdragon.hit");
        Assert.assertEquals(Audio.ENDERDRAGON_WINGS.toString(), "mob.enderdragon.wings");
        Assert.assertEquals(Audio.ENDERMEN_DEATH.toString(), "mob.endermen.death");
        Assert.assertEquals(Audio.ENDERMEN_HIT.toString(), "mob.endermen.hit");
        Assert.assertEquals(Audio.ENDERMEN_IDLE.toString(), "mob.endermen.idle");
        Assert.assertEquals(Audio.ENDERMEN_PORTAL.toString(), "mob.endermen.portal");
        Assert.assertEquals(Audio.ENDERMEN_SCREAM.toString(), "mob.endermen.scream");
        Assert.assertEquals(Audio.ENDERMEN_STARE.toString(), "mob.endermen.stare");
        Assert.assertEquals(Audio.GHAST_AFFECTIONATE_SCREAM.toString(), "mob.ghast.affectionate_scream");
        Assert.assertEquals(Audio.GHAST_CHARGE.toString(), "mob.ghast.charge");
        Assert.assertEquals(Audio.GHAST_DEATH.toString(), "mob.ghast.death");
        Assert.assertEquals(Audio.GHAST_FIREBALL.toString(), "mob.ghast.fireball");
        Assert.assertEquals(Audio.GHAST_MOAN.toString(), "mob.ghast.moan");
        Assert.assertEquals(Audio.GHAST_SCREAM.toString(), "mob.ghast.scream");
        Assert.assertEquals(Audio.GUARDIAN_HIT.toString(), "mob.guardian.hit");
        Assert.assertEquals(Audio.GUARDIAN_IDLE.toString(), "mob.guardian.idle");
        Assert.assertEquals(Audio.GUARDIAN_DEATH.toString(), "mob.guardian.death");
        Assert.assertEquals(Audio.GUARDIAN_ELDER_HIT.toString(), "mob.guardian.elder.hit");
        Assert.assertEquals(Audio.GUARDIAN_ELDER_IDLE.toString(), "mob.guardian.elder.idle");
        Assert.assertEquals(Audio.GUARDIAN_ELDER_DEATH.toString(), "mob.guardian.elder.death");
        Assert.assertEquals(Audio.GUARDIAN_LAND_HIT.toString(), "mob.guardian.land.hit");
        Assert.assertEquals(Audio.GUARDIAN_LAND_IDLE.toString(), "mob.guardian.land.idle");
        Assert.assertEquals(Audio.GUARDIAN_LAND_DEATH.toString(), "mob.guardian.land.death");
        Assert.assertEquals(Audio.GUARDIAN_CURSE.toString(), "mob.guardian.curse");
        Assert.assertEquals(Audio.GUARDIAN_ATTACK.toString(), "mob.guardian.attack");
        Assert.assertEquals(Audio.GUARDIAN_FLOP.toString(), "mob.guardian.flop");
        Assert.assertEquals(Audio.HORSE_ANGRY.toString(), "mob.horse.angry");
        Assert.assertEquals(Audio.HORSE_ARMOR.toString(), "mob.horse.armor");
        Assert.assertEquals(Audio.HORSE_BREATHE.toString(), "mob.horse.breathe");
        Assert.assertEquals(Audio.HORSE_DEATH.toString(), "mob.horse.death");
        Assert.assertEquals(Audio.HORSE_DONKEY_ANGRY.toString(), "mob.horse.donkey.angry");
        Assert.assertEquals(Audio.HORSE_DONKEY_DEATH.toString(), "mob.horse.donkey.death");
        Assert.assertEquals(Audio.HORSE_DONKEY_HIT.toString(), "mob.horse.donkey.hit");
        Assert.assertEquals(Audio.HORSE_DONKEY_IDLE.toString(), "mob.horse.donkey.idle");
        Assert.assertEquals(Audio.HORSE_GALLOP.toString(), "mob.horse.gallop");
        Assert.assertEquals(Audio.HORSE_HIT.toString(), "mob.horse.hit");
        Assert.assertEquals(Audio.HORSE_IDLE.toString(), "mob.horse.idle");
        Assert.assertEquals(Audio.HORSE_JUMP.toString(), "mob.horse.jmp");
        Assert.assertEquals(Audio.HORSE_LAND.toString(), "mob.horse.land");
        Assert.assertEquals(Audio.HORSE_LEATHER.toString(), "mob.horse.leather");
        Assert.assertEquals(Audio.HORSE_SKELETON_DEATH.toString(), "mob.horse.skeleton.death");
        Assert.assertEquals(Audio.HORSE_SKELETON_HIT.toString(), "mob.horse.skeleton.hit");
        Assert.assertEquals(Audio.HORSE_SKELETON_IDLE.toString(), "mob.horse.skeleton.idle");
        Assert.assertEquals(Audio.HORSE_SOFT.toString(), "mob.horse.soft");
        Assert.assertEquals(Audio.HORSE_WOOD.toString(), "mob.horse.wood");
        Assert.assertEquals(Audio.HORSE_ZOMBIE_DEATH.toString(), "mob.horse.zombie.death");
        Assert.assertEquals(Audio.HORSE_ZOMBIE_HIT.toString(), "mob.horse.zombie.hit");
        Assert.assertEquals(Audio.HORSE_ZOMBIE_IDLE.toString(), "mob.horse.zombie.idle");
        Assert.assertEquals(Audio.IRON_GOLEM_DEATH.toString(), "mob.irongolem.death");
        Assert.assertEquals(Audio.IRON_GOLEM_HIT.toString(), "mob.irongolem.hit");
        Assert.assertEquals(Audio.IRON_GOLEM_THROW.toString(), "mob.irongolem.throw");
        Assert.assertEquals(Audio.IRON_GOLEM_WALK.toString(), "mob.irongolem.walk");
        Assert.assertEquals(Audio.MAGMA_CUBE_BIG.toString(), "mob.magmacube.big");
        Assert.assertEquals(Audio.MAGMA_CUBE_JUMP.toString(), "mob.magmacube.jump");
        Assert.assertEquals(Audio.MAGMA_CUBE_SMALL.toString(), "mob.magmacube.small");
        Assert.assertEquals(Audio.PIG_DEATH.toString(), "mob.pig.death");
        Assert.assertEquals(Audio.PIG_SAY.toString(), "mob.pig.say");
        Assert.assertEquals(Audio.PIG_STEP.toString(), "mob.pig.step");
        Assert.assertEquals(Audio.RABBIT_HURT.toString(), "mob.rabbit.hurt");
        Assert.assertEquals(Audio.RABBIT_IDLE.toString(), "mob.rabbit.idle");
        Assert.assertEquals(Audio.RABBIT_HOP.toString(), "mob.rabbit.hop");
        Assert.assertEquals(Audio.RABBIT_DEATH.toString(), "mob.rabbit.death");
        Assert.assertEquals(Audio.SHEEP_SAY.toString(), "mob.sheep.say");
        Assert.assertEquals(Audio.SHEEP_SHEAR.toString(), "mob.sheep.shear");
        Assert.assertEquals(Audio.SHEEP_STEP.toString(), "mob.sheep.step");
        Assert.assertEquals(Audio.SILVERFISH_HIT.toString(), "mob.silverfish.hit");
        Assert.assertEquals(Audio.SILVERFISH_KILL.toString(), "mob.silverfish.kill");
        Assert.assertEquals(Audio.SILVERFISH_SAY.toString(), "mob.silverfish.say");
        Assert.assertEquals(Audio.SILVERFISH_STEP.toString(), "mob.silverfish.step");
        Assert.assertEquals(Audio.SKELETON_DEATH.toString(), "mob.skeleton.death");
        Assert.assertEquals(Audio.SKELETON_HURT.toString(), "mob.skeleton.hurt");
        Assert.assertEquals(Audio.SKELETON_SAY.toString(), "mob.skeleton.say");
        Assert.assertEquals(Audio.SKELETON_STEP.toString(), "mob.skeleton.step");
        Assert.assertEquals(Audio.SLIME_ATTACK.toString(), "mob.slime.attack");
        Assert.assertEquals(Audio.SLIME_BIG.toString(), "mob.slime.big");
        Assert.assertEquals(Audio.SLIME_SMALL.toString(), "mob.slime.small");
        Assert.assertEquals(Audio.SPIDER_DEATH.toString(), "mob.spider.death");
        Assert.assertEquals(Audio.SPIDER_SAY.toString(), "mob.spider.say");
        Assert.assertEquals(Audio.SPIDER_STEP.toString(), "mob.spider.step");
        Assert.assertEquals(Audio.VILLAGER_DEATH.toString(), "mob.villager.death");
        Assert.assertEquals(Audio.VILLAGER_HAGGLE.toString(), "mob.villager.haggle");
        Assert.assertEquals(Audio.VILLAGER_HIT.toString(), "mob.villager.hit");
        Assert.assertEquals(Audio.VILLAGER_IDLE.toString(), "mob.villager.idle");
        Assert.assertEquals(Audio.VILLAGER_NO.toString(), "mob.villager.no");
        Assert.assertEquals(Audio.VILLAGER_YES.toString(), "mob.villager.yes");
        Assert.assertEquals(Audio.WITHER_DEATH.toString(), "mob.wither.death");
        Assert.assertEquals(Audio.WITHER_HURT.toString(), "mob.wither.hurt");
        Assert.assertEquals(Audio.WITHER_IDLE.toString(), "mob.wither.idle");
        Assert.assertEquals(Audio.WITHER_SHOOT.toString(), "mob.wither.shoot");
        Assert.assertEquals(Audio.WITHER_SPAWN.toString(), "mob.wither.spawn");
        Assert.assertEquals(Audio.WOLF_BARK.toString(), "mob.wolf.bark");
        Assert.assertEquals(Audio.WOLF_DEATH.toString(), "mob.wolf.death");
        Assert.assertEquals(Audio.WOLF_GROWL.toString(), "mob.wolf.growl");
        Assert.assertEquals(Audio.WOLF_HOWL.toString(), "mob.wolf.howl");
        Assert.assertEquals(Audio.WOLF_HURT.toString(), "mob.wolf.hurt");
        Assert.assertEquals(Audio.WOLF_PANTING.toString(), "mob.wolf.panting");
        Assert.assertEquals(Audio.WOLF_SHAKE.toString(), "mob.wolf.shake");
        Assert.assertEquals(Audio.WOLF_STEP.toString(), "mob.wolf.step");
        Assert.assertEquals(Audio.WOLF_WHINE.toString(), "mob.wolf.whine");
        Assert.assertEquals(Audio.ZOMBIE_DEATH.toString(), "mob.zombie.death");
        Assert.assertEquals(Audio.ZOMBIE_HURT.toString(), "mob.zombie.hurt");
        Assert.assertEquals(Audio.ZOMBIE_INFECT.toString(), "mob.zombie.infect");
        Assert.assertEquals(Audio.ZOMBIE_METAL.toString(), "mob.zombie.metal");
        Assert.assertEquals(Audio.ZOMBIE_REMEDY.toString(), "mob.zombie.remedy");
        Assert.assertEquals(Audio.ZOMBIE_SAY.toString(), "mob.zombie.say");
        Assert.assertEquals(Audio.ZOMBIE_STEP.toString(), "mob.zombie.step");
        Assert.assertEquals(Audio.ZOMBIE_UNFECT.toString(), "mob.zombie.unfect");
        Assert.assertEquals(Audio.ZOMBIE_WOOD.toString(), "mob.zombie.wood");
        Assert.assertEquals(Audio.ZOMBIE_WOOD_BREAK.toString(), "mob.zombie.woodbreak");
        Assert.assertEquals(Audio.ZOMBIE_PIGMAN_SAY.toString(), "mob.zombiepig.zpig");
        Assert.assertEquals(Audio.ZOMBIE_PIGMAN_ANGRY.toString(), "mob.zombiepig.zpigangry");
        Assert.assertEquals(Audio.ZOMBIE_PIGMAN_DEATH.toString(), "mob.zombiepig.zpigdeath");
        Assert.assertEquals(Audio.ZOMBIE_PIGMAN_HURT.toString(), "mob.zombiepig.zpighurt");
        Assert.assertEquals(Audio.RECORD_11.toString(), "records.11");
        Assert.assertEquals(Audio.RECORD_13.toString(), "records.13");
        Assert.assertEquals(Audio.RECORD_BLOCKS.toString(), "records.blocks");
        Assert.assertEquals(Audio.RECORD_CAT.toString(), "records.cat");
        Assert.assertEquals(Audio.RECORD_CHIRP.toString(), "records.chirp");
        Assert.assertEquals(Audio.RECORD_FAR.toString(), "records.far");
        Assert.assertEquals(Audio.RECORD_MALL.toString(), "records.mall");
        Assert.assertEquals(Audio.RECORD_MELLOHI.toString(), "records.mellohi");
        Assert.assertEquals(Audio.RECORD_STAL.toString(), "records.stal");
        Assert.assertEquals(Audio.RECORD_STRAD.toString(), "records.strad");
        Assert.assertEquals(Audio.RECORD_WAIT.toString(), "records.wait");
        Assert.assertEquals(Audio.RECORD_WARD.toString(), "records.ward");
        Assert.assertEquals(Audio.MUSIC_MENU.toString(), "music.menu");
        Assert.assertEquals(Audio.MUSIC_GAME.toString(), "music.game");
        Assert.assertEquals(Audio.MUSIC_GAME_CREATIVE.toString(), "music.game.creative");
        Assert.assertEquals(Audio.MUSIC_GAME_END.toString(), "music.game.end");
        Assert.assertEquals(Audio.MUSIC_GAME_END_DRAGON.toString(), "music.game.end.dragon");
        Assert.assertEquals(Audio.MUSIC_GAME_END_CREDITS.toString(), "music.game. end.credits");
        Assert.assertEquals(Audio.MUSIC_GAME_NETHER.toString(), "music.game.nether");
    }
}